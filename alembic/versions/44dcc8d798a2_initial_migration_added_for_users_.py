"""Initial migration added for users, company, income and cost table

Revision ID: 44dcc8d798a2
Revises: 
Create Date: 2025-07-20 13:35:19.497396

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '44dcc8d798a2'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_costs_id'), table_name='costs')
    op.drop_table('costs')
    op.drop_index(op.f('ix_incomes_id'), table_name='incomes')
    op.drop_table('incomes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('incomes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('collection_sin', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('collection_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('income_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('income_document', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('incomes_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('incomes_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('incomes_pkey'))
    )
    op.create_index(op.f('ix_incomes_id'), 'incomes', ['id'], unique=False)
    op.create_table('costs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('voucher', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('amount', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('entry_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('cost_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('cost_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('cost_document', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('note', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('costs_created_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('costs_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('costs_pkey'))
    )
    op.create_index(op.f('ix_costs_id'), 'costs', ['id'], unique=False)
    # ### end Alembic commands ###
