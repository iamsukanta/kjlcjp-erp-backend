"""update users, roles and permissions id to int

Revision ID: 849b3935d71a
Revises: 57a2cbf16e3f
Create Date: 2025-06-30 20:44:15.925539

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '849b3935d71a'
down_revision: Union[str, Sequence[str], None] = '57a2cbf16e3f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('permissions', 'id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('role_permissions', 'role_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('role_permissions', 'permission_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('roles', 'id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('user_roles', 'user_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('user_roles', 'role_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.execute('ALTER TABLE permissions ALTER COLUMN id TYPE INTEGER USING id::integer')
    op.execute('ALTER TABLE roles ALTER COLUMN id TYPE INTEGER USING id::integer')
    op.execute('ALTER TABLE users ALTER COLUMN id TYPE INTEGER USING id::integer')
    op.execute('ALTER TABLE user_roles ALTER COLUMN user_id TYPE INTEGER USING user_id::integer')
    op.execute('ALTER TABLE user_roles ALTER COLUMN role_id TYPE INTEGER USING role_id::integer')
    op.execute('ALTER TABLE role_permissions ALTER COLUMN role_id TYPE INTEGER USING role_id::integer')
    op.execute('ALTER TABLE role_permissions ALTER COLUMN permission_id TYPE INTEGER USING permission_id::integer')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('user_roles', 'role_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('user_roles', 'user_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('roles', 'id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('role_permissions', 'permission_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('role_permissions', 'role_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('permissions', 'id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               existing_nullable=False,
               autoincrement=True)
    op.execute('ALTER TABLE permissions ALTER COLUMN id TYPE VARCHAR USING id::varchar')
    # ### end Alembic commands ###
